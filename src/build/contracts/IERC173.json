{
  "contractName": "IERC173",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"return\":\"The address of the owner.\"},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"The address of the new owner of the contract\"}}}},\"userdoc\":{\"methods\":{\"owner()\":{\"notice\":\"Get the address of the owner\"},\"transferOwnership(address)\":{\"notice\":\"Set the address of the new owner of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/lucascullen/GitHub/MembershipToken/src/contracts/Interfaces.sol\":\"IERC173\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lucascullen/GitHub/MembershipToken/src/contracts/Interfaces.sol\":{\"keccak256\":\"0x5c2eec9b27e8e97aca2df4cb5e8e496935abedd581719c0a141cbedfe7bebb77\",\"urls\":[\"bzzr://8fd5c6d600f98bda7542155552ddde0079397587f722f7d50bfdbbfe4bda1d9e\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.8;\n\n/// @title ERC-1261 MVT Standard\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n///  The constructor should define the attribute set for this MVT.\n///  Note: the ERC-165 identifier for this interface is 0x1d8362cf.\ninterface IERC1261 {/* is ERC173, ERC165 */\n    /// @dev This emits when a token is assigned to a member.\n    event Assigned(address indexed _to, uint[] attributeIndexes);\n\n    /// @dev This emits when a membership is revoked.\n    event Revoked(address indexed _to);\n\n    /// @dev This emits when a user forfeits his membership\n    event Forfeited(address indexed _to);\n\n    /// @dev This emits when a membership request is accepted\n    event ApprovedMembership(address indexed _to, uint[] attributeIndexes);\n\n    /// @dev This emits when a membership is requested by an user\n    event RequestedMembership(address indexed _to);\n\n    /// @dev This emits when data of a member is modified.\n    ///  Doesn't emit when a new membership is created and data is assigned.\n    event ModifiedAttributes(address indexed _to, uint attributeIndex, uint attributeValueIndex);\n\n    /// @notice Adds a new attribute (key, value) pair to the set of pre-existing attributes.\n    /// @dev Adds a new attribute at the end of the array of attributes and maps it to `values`.\n    ///  Contract can set a max number of attributes and throw if limit is reached.\n    /// @param _name Name of the attribute which is to be added.\n    /// @param values List of values of the specified attribute.\n    function addAttributeSet(bytes32 _name, bytes32[] calldata values) external;\n\n    /// @notice Modifies the attribute value of a specific attribute for a given `_to` address.\n    /// @dev Use appropriate checks for whether a user/admin can modify the data.\n    ///  Best practice is to use onlyOwner modifier from ERC173.\n    /// @param _to The address whose attribute is being modified.\n    /// @param _attributeIndex The index of attribute which is being modified.\n    /// @param _modifiedValueIndex The index of the new value which is being assigned to the user attribute.\n    function modifyAttributeByIndex(address _to, uint _attributeIndex, uint _modifiedValueIndex) external;\n\n    /// @notice Requests membership from any address.\n    /// @dev Throws if the `msg.sender` already has the token.\n    ///  The individual `msg.sender` can request for a membership if some existing criteria are satisfied.\n    ///  When a membership is requested, this function emits the RequestedMembership event.\n    ///  dev can store the membership request and use `approveRequest` to assign membership later\n    ///  dev can also oraclize the request to assign membership later\n    /// @param _attributeIndexes the attribute data associated with the member.\n    ///  This is an array which contains indexes of attributes.\n    function requestMembership(uint[] calldata _attributeIndexes) external payable;\n\n    /// @notice User can forfeit his membership.\n    /// @dev Throws if the `msg.sender` already doesn't have the token.\n    ///  The individual `msg.sender` can revoke his/her membership.\n    ///  When the token is revoked, this function emits the Revoked event.\n    function forfeitMembership() external payable;\n\n    /// @notice Owner approves membership from any address.\n    /// @dev Throws if the `_user` doesn't have a pending request.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  Approves the pending request\n    ///  Make oraclize callback call this function\n    ///  When the token is assigned, this function emits the `ApprovedMembership` and `Assigned` events.\n    /// @param _user the user whose membership request will be approved.\n    function approveRequest(address _user) external;\n\n    /// @notice Owner discards membership from any address.\n    /// @dev Throws if the `_user` doesn't have a pending request.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  Discards the pending request\n    ///  Make oraclize callback call this function if criteria are not satisfied\n    /// @param _user the user whose membership request will be discarded.\n    function discardRequest(address _user) external;\n\n    /// @notice Assigns membership of an MVT from owner address to another address.\n    /// @dev Throws if the member already has the token.\n    ///  Throws if `_to` is the zero address.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  The entity assigns the membership to each individual.\n    ///  When the token is assigned, this function emits the Assigned event.\n    /// @param _to The address to which the token is assigned.\n    /// @param _attributeIndexes The attribute data associated with the member.\n    ///  This is an array which contains indexes of attributes.\n    function assignTo(address _to, uint[] calldata _attributeIndexes) external;\n\n    /// @notice Only Owner can revoke the membership.\n    /// @dev This removes the membership of the user.\n    ///  Throws if the `_from` is not an owner of the token.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  Throws if `_from` is the zero address.\n    ///  When transaction is complete, this function emits the Revoked event.\n    /// @param _from The current owner of the MVT.\n    function revokeFrom(address _from) external;\n\n    /// @notice Queries whether a member is a current member of the organization.\n    /// @dev MVT's assigned to the zero address are considered invalid, and this\n    ///  function throws for queries about the zero address.\n    /// @param _to An address for whom to query the membership.\n    /// @return Whether the member owns the token.\n    function isCurrentMember(address _to) external view returns (bool);\n\n     /// @notice Gets the value collection of an attribute.\n    /// @dev Returns the values of attributes as a bytes32 array.\n    /// @param _name Name of the attribute whose values are to be fetched\n    /// @return The values of attributes.\n    function getAttributeExhaustiveCollection(bytes32 _name) external view returns (bytes32[] memory);\n\n    /// @notice Returns the list of all past and present members.\n    /// @dev Use this function along with isCurrentMember to find wasMemberOf() in Js.\n    ///  It can be calculated as present in getAllMembers() and !isCurrentMember().\n    /// @return List of addresses who have owned the token and currently own the token.\n    function getAllMembers() external view returns (address[] memory);\n\n    /// @notice Returns the count of all current members.\n    /// @dev Use this function in polls as denominator to get percentage of members voted.\n    /// @return Count of current Members.\n    function getCurrentMemberCount() external view returns (uint);\n\n    /// @notice Returns the list of all attribute names.\n    /// @dev Returns the names of attributes as a bytes32 array.\n    ///  AttributeNames are stored in a bytes32 Array.\n    ///  Possible values for each attributeName are stored in a mapping(attributeName => attributeValues).\n    ///  AttributeName is bytes32 and attributeValues is bytes32[].\n    ///  Attributes of a particular user are stored in bytes32[].\n    ///  Which has a single attributeValue for each attributeName in an array.\n    ///  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n    /// @return The names of attributes.\n    function getAttributeNames() external view returns (bytes32[] memory);\n\n    /// @notice Returns the attributes of `_to` address.\n    /// @dev Throws if `_to` is the zero address.\n    ///  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n    /// @param _to The address whose current attributes are to be returned.\n    /// @return The attributes associated with `_to` address.\n    function getAttributes(address _to) external view returns (bytes32[] memory);\n\n    /// @notice Returns the `attribute` stored against `_to` address.\n    /// @dev Finds the index of the `attribute`.\n    ///  Throws if the attribute is not present in the predefined attributes.\n    ///  Returns the attributeValue for the specified `attribute`.\n    /// @param _to The address whose attribute is requested.\n    /// @param _attributeIndex The attribute Index which is required.\n    /// @return The attribute value at the specified name.\n    function getAttributeByIndex(address _to, uint _attributeIndex) external view returns (bytes32);\n}\n\ninterface IERC173 /* is ERC165 */ {\n    /// @dev This emits when ownership of a contract changes.\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /// @notice Get the address of the owner\n    /// @return The address of the owner.\n    function owner() external view;\n\n    /// @notice Set the address of the new owner of the contract\n    /// @param _newOwner The address of the new owner of the contract\n    function transferOwnership(address _newOwner) external;\n}",
  "sourcePath": "/Users/lucascullen/GitHub/MembershipToken/src/contracts/Interfaces.sol",
  "ast": {
    "absolutePath": "/Users/lucascullen/GitHub/MembershipToken/src/contracts/Interfaces.sol",
    "exportedSymbols": {
      "IERC1261": [
        196
      ],
      "IERC173": [
        211
      ]
    },
    "id": 212,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 63,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC-1261 MVT Standard\n @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n  The constructor should define the attribute set for this MVT.\n  Note: the ERC-165 identifier for this interface is 0x1d8362cf.",
        "fullyImplemented": false,
        "id": 196,
        "linearizedBaseContracts": [
          196
        ],
        "name": "IERC1261",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev This emits when a token is assigned to a member.",
            "id": 70,
            "name": "Assigned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "393:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "414:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 66,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "414:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "414:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:46:2"
            },
            "src": "378:61:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is revoked.",
            "id": 74,
            "name": "Revoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "513:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:21:2"
            },
            "src": "499:35:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a user forfeits his membership",
            "id": 78,
            "name": "Forfeited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "616:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:21:2"
            },
            "src": "600:37:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership request is accepted",
            "id": 85,
            "name": "ApprovedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "730:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "751:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "751:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "751:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "729:46:2"
            },
            "src": "705:71:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is requested by an user",
            "id": 89,
            "name": "RequestedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "874:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "873:21:2"
            },
            "src": "848:47:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when data of a member is modified.\n  Doesn't emit when a new membership is created and data is assigned.",
            "id": 97,
            "name": "ModifiedAttributes",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1062:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "name": "attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1083:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "name": "attributeValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1104:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1061:68:2"
            },
            "src": "1037:93:2"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new attribute (key, value) pair to the set of pre-existing attributes.\n @dev Adds a new attribute at the end of the array of attributes and maps it to `values`.\n  Contract can set a max number of attributes and throw if limit is reached.\n @param _name Name of the attribute which is to be added.\n @param values List of values of the specified attribute.",
            "id": 105,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAttributeSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1566:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1581:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 100,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1581:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 101,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1581:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1565:42:2"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:2"
            },
            "scope": 196,
            "src": "1541:76:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Modifies the attribute value of a specific attribute for a given `_to` address.\n @dev Use appropriate checks for whether a user/admin can modify the data.\n  Best practice is to use onlyOwner modifier from ERC173.\n @param _to The address whose attribute is being modified.\n @param _attributeIndex The index of attribute which is being modified.\n @param _modifiedValueIndex The index of the new value which is being assigned to the user attribute.",
            "id": 114,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "modifyAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2152:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2165:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_modifiedValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2187:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2151:61:2"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:2"
            },
            "scope": 196,
            "src": "2120:102:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Requests membership from any address.\n @dev Throws if the `msg.sender` already has the token.\n  The individual `msg.sender` can request for a membership if some existing criteria are satisfied.\n  When a membership is requested, this function emits the RequestedMembership event.\n  dev can store the membership request and use `approveRequest` to assign membership later\n  dev can also oraclize the request to assign membership later\n @param _attributeIndexes the attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "2883:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2883:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2883:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2882:35:2"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2934:0:2"
            },
            "scope": 196,
            "src": "2856:79:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice User can forfeit his membership.\n @dev Throws if the `msg.sender` already doesn't have the token.\n  The individual `msg.sender` can revoke his/her membership.\n  When the token is revoked, this function emits the Revoked event.",
            "id": 123,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "forfeitMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3231:2:2"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3250:0:2"
            },
            "scope": 196,
            "src": "3205:46:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner approves membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Approves the pending request\n  Make oraclize callback call this function\n  When the token is assigned, this function emits the `ApprovedMembership` and `Assigned` events.\n @param _user the user whose membership request will be approved.",
            "id": 128,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "3728:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3727:15:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3751:0:2"
            },
            "scope": 196,
            "src": "3704:48:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner discards membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Discards the pending request\n  Make oraclize callback call this function if criteria are not satisfied\n @param _user the user whose membership request will be discarded.",
            "id": 133,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "discardRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "4155:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4155:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4154:15:2"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4178:0:2"
            },
            "scope": 196,
            "src": "4131:48:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Assigns membership of an MVT from owner address to another address.\n @dev Throws if the member already has the token.\n  Throws if `_to` is the zero address.\n  Throws if the `msg.sender` is not an owner.\n  The entity assigns the membership to each individual.\n  When the token is assigned, this function emits the Assigned event.\n @param _to The address to which the token is assigned.\n @param _attributeIndexes The attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 141,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assignTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "4790:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "4803:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 136,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4803:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 137,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4803:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4789:48:2"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4846:0:2"
            },
            "scope": 196,
            "src": "4772:75:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Only Owner can revoke the membership.\n @dev This removes the membership of the user.\n  Throws if the `_from` is not an owner of the token.\n  Throws if the `msg.sender` is not an owner.\n  Throws if `_from` is the zero address.\n  When transaction is complete, this function emits the Revoked event.\n @param _from The current owner of the MVT.",
            "id": 146,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "5272:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5271:15:2"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5295:0:2"
            },
            "scope": 196,
            "src": "5252:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Queries whether a member is a current member of the organization.\n @dev MVT's assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _to An address for whom to query the membership.\n @return Whether the member owns the token.",
            "id": 153,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isCurrentMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "5666:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5666:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5665:13:2"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "5702:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5701:6:2"
            },
            "scope": 196,
            "src": "5641:67:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Gets the value collection of an attribute.\n @dev Returns the values of attributes as a bytes32 array.\n @param _name Name of the attribute whose values are to be fetched\n @return The values of attributes.",
            "id": 161,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributeExhaustiveCollection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "5998:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5998:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5997:15:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "6036:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 157,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6036:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 158,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6036:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6035:18:2"
            },
            "scope": 196,
            "src": "5956:98:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all past and present members.\n @dev Use this function along with isCurrentMember to find wasMemberOf() in Js.\n  It can be calculated as present in getAllMembers() and !isCurrentMember().\n @return List of addresses who have owned the token and currently own the token.",
            "id": 167,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMembers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6407:2:2"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "6433:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 163,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6433:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 164,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6433:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6432:18:2"
            },
            "scope": 196,
            "src": "6385:66:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the count of all current members.\n @dev Use this function in polls as denominator to get percentage of members voted.\n @return Count of current Members.",
            "id": 172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentMemberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6678:2:2"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "6704:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6703:6:2"
            },
            "scope": 196,
            "src": "6648:62:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all attribute names.\n @dev Returns the names of attributes as a bytes32 array.\n  AttributeNames are stored in a bytes32 Array.\n  Possible values for each attributeName are stored in a mapping(attributeName => attributeValues).\n  AttributeName is bytes32 and attributeValues is bytes32[].\n  Attributes of a particular user are stored in bytes32[].\n  Which has a single attributeValue for each attributeName in an array.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @return The names of attributes.",
            "id": 178,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributeNames",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7366:2:2"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "7392:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 174,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7392:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 175,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7392:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7391:18:2"
            },
            "scope": 196,
            "src": "7340:70:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the attributes of `_to` address.\n @dev Throws if `_to` is the zero address.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @param _to The address whose current attributes are to be returned.\n @return The attributes associated with `_to` address.",
            "id": 186,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "7770:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7770:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7769:13:2"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "7806:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 182,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7806:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 183,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7806:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7805:18:2"
            },
            "scope": 196,
            "src": "7747:77:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the `attribute` stored against `_to` address.\n @dev Finds the index of the `attribute`.\n  Throws if the attribute is not present in the predefined attributes.\n  Returns the attributeValue for the specified `attribute`.\n @param _to The address whose attribute is requested.\n @param _attributeIndex The attribute Index which is required.\n @return The attribute value at the specified name.",
            "id": 195,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "8313:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8313:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "8326:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8326:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8312:35:2"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "8371:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8371:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8370:9:2"
            },
            "scope": 196,
            "src": "8284:96:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 212,
        "src": "268:8114:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 211,
        "linearizedBaseContracts": [
          211
        ],
        "name": "IERC173",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev This emits when ownership of a contract changes.",
            "id": 202,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "indexed": true,
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "8513:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8513:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "8544:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8512:57:2"
            },
            "src": "8486:84:2"
          },
          {
            "body": null,
            "documentation": "@notice Get the address of the owner\n @return The address of the owner.",
            "id": 205,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8677:2:2"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8693:0:2"
            },
            "scope": 211,
            "src": "8663:31:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Set the address of the new owner of the contract\n @param _newOwner The address of the new owner of the contract",
            "id": 210,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "8862:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8862:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8861:19:2"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8889:0:2"
            },
            "scope": 211,
            "src": "8835:55:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 212,
        "src": "8384:508:2"
      }
    ],
    "src": "0:8892:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/lucascullen/GitHub/MembershipToken/src/contracts/Interfaces.sol",
    "exportedSymbols": {
      "IERC1261": [
        196
      ],
      "IERC173": [
        211
      ]
    },
    "id": 212,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 63,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC-1261 MVT Standard\n @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n  The constructor should define the attribute set for this MVT.\n  Note: the ERC-165 identifier for this interface is 0x1d8362cf.",
        "fullyImplemented": false,
        "id": 196,
        "linearizedBaseContracts": [
          196
        ],
        "name": "IERC1261",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev This emits when a token is assigned to a member.",
            "id": 70,
            "name": "Assigned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "393:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "414:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 66,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "414:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "414:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:46:2"
            },
            "src": "378:61:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is revoked.",
            "id": 74,
            "name": "Revoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "513:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:21:2"
            },
            "src": "499:35:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a user forfeits his membership",
            "id": 78,
            "name": "Forfeited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "616:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:21:2"
            },
            "src": "600:37:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership request is accepted",
            "id": 85,
            "name": "ApprovedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "730:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "751:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "751:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "751:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "729:46:2"
            },
            "src": "705:71:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is requested by an user",
            "id": 89,
            "name": "RequestedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "874:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "873:21:2"
            },
            "src": "848:47:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when data of a member is modified.\n  Doesn't emit when a new membership is created and data is assigned.",
            "id": 97,
            "name": "ModifiedAttributes",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1062:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "name": "attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1083:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "name": "attributeValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1104:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1061:68:2"
            },
            "src": "1037:93:2"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new attribute (key, value) pair to the set of pre-existing attributes.\n @dev Adds a new attribute at the end of the array of attributes and maps it to `values`.\n  Contract can set a max number of attributes and throw if limit is reached.\n @param _name Name of the attribute which is to be added.\n @param values List of values of the specified attribute.",
            "id": 105,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAttributeSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1566:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "1581:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 100,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1581:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 101,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1581:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1565:42:2"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:2"
            },
            "scope": 196,
            "src": "1541:76:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Modifies the attribute value of a specific attribute for a given `_to` address.\n @dev Use appropriate checks for whether a user/admin can modify the data.\n  Best practice is to use onlyOwner modifier from ERC173.\n @param _to The address whose attribute is being modified.\n @param _attributeIndex The index of attribute which is being modified.\n @param _modifiedValueIndex The index of the new value which is being assigned to the user attribute.",
            "id": 114,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "modifyAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2152:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2165:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_modifiedValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "2187:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2151:61:2"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:2"
            },
            "scope": 196,
            "src": "2120:102:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Requests membership from any address.\n @dev Throws if the `msg.sender` already has the token.\n  The individual `msg.sender` can request for a membership if some existing criteria are satisfied.\n  When a membership is requested, this function emits the RequestedMembership event.\n  dev can store the membership request and use `approveRequest` to assign membership later\n  dev can also oraclize the request to assign membership later\n @param _attributeIndexes the attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "2883:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2883:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2883:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2882:35:2"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2934:0:2"
            },
            "scope": 196,
            "src": "2856:79:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice User can forfeit his membership.\n @dev Throws if the `msg.sender` already doesn't have the token.\n  The individual `msg.sender` can revoke his/her membership.\n  When the token is revoked, this function emits the Revoked event.",
            "id": 123,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "forfeitMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3231:2:2"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3250:0:2"
            },
            "scope": 196,
            "src": "3205:46:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner approves membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Approves the pending request\n  Make oraclize callback call this function\n  When the token is assigned, this function emits the `ApprovedMembership` and `Assigned` events.\n @param _user the user whose membership request will be approved.",
            "id": 128,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "3728:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3727:15:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3751:0:2"
            },
            "scope": 196,
            "src": "3704:48:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner discards membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Discards the pending request\n  Make oraclize callback call this function if criteria are not satisfied\n @param _user the user whose membership request will be discarded.",
            "id": 133,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "discardRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "4155:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4155:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4154:15:2"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4178:0:2"
            },
            "scope": 196,
            "src": "4131:48:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Assigns membership of an MVT from owner address to another address.\n @dev Throws if the member already has the token.\n  Throws if `_to` is the zero address.\n  Throws if the `msg.sender` is not an owner.\n  The entity assigns the membership to each individual.\n  When the token is assigned, this function emits the Assigned event.\n @param _to The address to which the token is assigned.\n @param _attributeIndexes The attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 141,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assignTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "4790:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "4803:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 136,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4803:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 137,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4803:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4789:48:2"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4846:0:2"
            },
            "scope": 196,
            "src": "4772:75:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Only Owner can revoke the membership.\n @dev This removes the membership of the user.\n  Throws if the `_from` is not an owner of the token.\n  Throws if the `msg.sender` is not an owner.\n  Throws if `_from` is the zero address.\n  When transaction is complete, this function emits the Revoked event.\n @param _from The current owner of the MVT.",
            "id": 146,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "5272:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5271:15:2"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5295:0:2"
            },
            "scope": 196,
            "src": "5252:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Queries whether a member is a current member of the organization.\n @dev MVT's assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _to An address for whom to query the membership.\n @return Whether the member owns the token.",
            "id": 153,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isCurrentMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "5666:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5666:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5665:13:2"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "5702:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5702:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5701:6:2"
            },
            "scope": 196,
            "src": "5641:67:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Gets the value collection of an attribute.\n @dev Returns the values of attributes as a bytes32 array.\n @param _name Name of the attribute whose values are to be fetched\n @return The values of attributes.",
            "id": 161,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributeExhaustiveCollection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "5998:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5998:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5997:15:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "6036:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 157,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6036:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 158,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6036:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6035:18:2"
            },
            "scope": 196,
            "src": "5956:98:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all past and present members.\n @dev Use this function along with isCurrentMember to find wasMemberOf() in Js.\n  It can be calculated as present in getAllMembers() and !isCurrentMember().\n @return List of addresses who have owned the token and currently own the token.",
            "id": 167,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMembers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6407:2:2"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "6433:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 163,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6433:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 164,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6433:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6432:18:2"
            },
            "scope": 196,
            "src": "6385:66:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the count of all current members.\n @dev Use this function in polls as denominator to get percentage of members voted.\n @return Count of current Members.",
            "id": 172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentMemberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6678:2:2"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "6704:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6703:6:2"
            },
            "scope": 196,
            "src": "6648:62:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all attribute names.\n @dev Returns the names of attributes as a bytes32 array.\n  AttributeNames are stored in a bytes32 Array.\n  Possible values for each attributeName are stored in a mapping(attributeName => attributeValues).\n  AttributeName is bytes32 and attributeValues is bytes32[].\n  Attributes of a particular user are stored in bytes32[].\n  Which has a single attributeValue for each attributeName in an array.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @return The names of attributes.",
            "id": 178,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributeNames",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7366:2:2"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "7392:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 174,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7392:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 175,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7392:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7391:18:2"
            },
            "scope": 196,
            "src": "7340:70:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the attributes of `_to` address.\n @dev Throws if `_to` is the zero address.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @param _to The address whose current attributes are to be returned.\n @return The attributes associated with `_to` address.",
            "id": 186,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "7770:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7770:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7769:13:2"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "7806:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 182,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7806:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 183,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7806:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7805:18:2"
            },
            "scope": 196,
            "src": "7747:77:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the `attribute` stored against `_to` address.\n @dev Finds the index of the `attribute`.\n  Throws if the attribute is not present in the predefined attributes.\n  Returns the attributeValue for the specified `attribute`.\n @param _to The address whose attribute is requested.\n @param _attributeIndex The attribute Index which is required.\n @return The attribute value at the specified name.",
            "id": 195,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "8313:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8313:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "8326:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8326:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8312:35:2"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "8371:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8371:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8370:9:2"
            },
            "scope": 196,
            "src": "8284:96:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 212,
        "src": "268:8114:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 211,
        "linearizedBaseContracts": [
          211
        ],
        "name": "IERC173",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev This emits when ownership of a contract changes.",
            "id": 202,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "indexed": true,
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "8513:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8513:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "8544:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8544:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8512:57:2"
            },
            "src": "8486:84:2"
          },
          {
            "body": null,
            "documentation": "@notice Get the address of the owner\n @return The address of the owner.",
            "id": 205,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8677:2:2"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8693:0:2"
            },
            "scope": 211,
            "src": "8663:31:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Set the address of the new owner of the contract\n @param _newOwner The address of the new owner of the contract",
            "id": 210,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "8862:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8862:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8861:19:2"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8889:0:2"
            },
            "scope": 211,
            "src": "8835:55:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 212,
        "src": "8384:508:2"
      }
    ],
    "src": "0:8892:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-18T02:19:52.864Z",
  "devdoc": {
    "methods": {
      "owner()": {
        "return": "The address of the owner."
      },
      "transferOwnership(address)": {
        "params": {
          "_newOwner": "The address of the new owner of the contract"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "owner()": {
        "notice": "Get the address of the owner"
      },
      "transferOwnership(address)": {
        "notice": "Set the address of the new owner of the contract"
      }
    }
  }
}